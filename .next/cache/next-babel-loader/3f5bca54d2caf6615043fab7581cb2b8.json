{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/louisalemar/Desktop/calculator-app/src/components/Calculator/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport NumberKey from '../NumberKey';\nimport Total from '../Total';\nimport Add from '../Add';\nimport Equals from '../Equals';\n\nclass Calculator extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      total: '',\n      runningNumber: [],\n      method: ''\n    });\n\n    _defineProperty(this, \"add\", number => {\n      this.setState({\n        total: this.state.runningNumber.join(''),\n        runningNumber: [],\n        method: '+'\n      });\n      console.log(this.state);\n    });\n\n    _defineProperty(this, \"equals\", () => {\n      switch (this.state.method) {\n        case '+':\n          this.setState({\n            total: this.state.total + this.state.runningNumber.join('')\n          });\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    _defineProperty(this, \"updateRunningNumber\", number => {\n      const runningNumber = [...this.state.runningNumber];\n      runningNumber.push(number);\n      console.log(typeof this.state.total);\n\n      if (this.state.total !== '0') {\n        this.setState({\n          total: this.state.total.concat(number),\n          runningNumber: runningNumber\n        });\n      } else {\n        this.setState({\n          total: '0',\n          runningNumber: runningNumber\n        });\n      }\n    });\n  }\n\n  render() {\n    const numberArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n    return __jsx(\"div\", {\n      className: style.divContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, __jsx(Total, {\n      amount: this.state.total,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }), numberArray.map((element, index) => {\n      return __jsx(NumberKey, {\n        number: element,\n        key: index,\n        click: () => {\n          this.updateRunningNumber(element);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 32\n        }\n      });\n    }), __jsx(Add, {\n      click: this.add,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), __jsx(Equals, {\n      click: this.equals,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/louisalemar/Desktop/calculator-app/src/components/Calculator/index.js"],"names":["React","NumberKey","Total","Add","Equals","Calculator","Component","total","runningNumber","method","number","setState","state","join","console","log","push","concat","render","numberArray","style","divContainer","map","element","index","updateRunningNumber","add","equals"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;;AAAA,mCAC7B;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,aAAa,EAAE,EAFX;AAGJC,MAAAA,MAAM,EAAE;AAHJ,KAD6B;;AAAA,iCAO9BC,MAAD,IAAY;AACd,WAAKC,QAAL,CAAc;AACVJ,QAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWJ,aAAX,CAAyBK,IAAzB,CAA8B,EAA9B,CADG;AAEVL,QAAAA,aAAa,EAAE,EAFL;AAGVC,QAAAA,MAAM,EAAE;AAHE,OAAd;AAMAK,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACH,KAfoC;;AAAA,oCAiB5B,MAAM;AACX,cAAO,KAAKA,KAAL,CAAWH,MAAlB;AACI,aAAK,GAAL;AACI,eAAKE,QAAL,CAAc;AACVJ,YAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWL,KAAX,GAAmB,KAAKK,KAAL,CAAWJ,aAAX,CAAyBK,IAAzB,CAA8B,EAA9B;AADhB,WAAd;AAGA;;AAEJ;AACI;AARR;AAUH,KA5BoC;;AAAA,iDA8BdH,MAAD,IAAY;AAC9B,YAAMF,aAAa,GAAG,CAAC,GAAG,KAAKI,KAAL,CAAWJ,aAAf,CAAtB;AACAA,MAAAA,aAAa,CAACQ,IAAd,CAAmBN,MAAnB;AAEAI,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAO,KAAKH,KAAL,CAAWL,KAA9B;;AAEA,UAAG,KAAKK,KAAL,CAAWL,KAAX,KAAqB,GAAxB,EAA4B;AACxB,aAAKI,QAAL,CAAc;AACVJ,UAAAA,KAAK,EAAE,KAAKK,KAAL,CAAWL,KAAX,CAAiBU,MAAjB,CAAwBP,MAAxB,CADG;AAEVF,UAAAA,aAAa,EAAEA;AAFL,SAAd;AAIH,OALD,MAKO;AACH,aAAKG,QAAL,CAAc;AACVJ,UAAAA,KAAK,EAAE,GADG;AAEVC,UAAAA,aAAa,EAAEA;AAFL,SAAd;AAIH;AACJ,KA/CoC;AAAA;;AAiDrCU,EAAAA,MAAM,GAAG;AACL,UAAMC,WAAW,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAApB;AAEA,WACI;AAAK,MAAA,SAAS,EAAEC,KAAK,CAACC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,KAAD;AAAO,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWL,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGQY,WAAW,CAACG,GAAZ,CAAgB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAChC,aAAO,MAAC,SAAD;AACH,QAAA,MAAM,EAAED,OADL;AAEH,QAAA,GAAG,EAAEC,KAFF;AAGH,QAAA,KAAK,EAAE,MAAM;AAAE,eAAKC,mBAAL,CAAyBF,OAAzB;AAAkC,SAH9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAKH,KAND,CAHR,EAWI,MAAC,GAAD;AAAK,MAAA,KAAK,EAAE,KAAKG,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,EAYI,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CADJ;AAgBH;;AApEoC;;AAuEzC,eAAetB,UAAf","sourcesContent":["import React from 'react';\n\nimport NumberKey from '../NumberKey';\nimport Total from '../Total';\nimport Add from '../Add';\nimport Equals from '../Equals';\n\nclass Calculator extends React.Component {\n    state = {\n        total: '',\n        runningNumber: [],\n        method: ''\n    }\n\n    add = (number) => {\n        this.setState({ \n            total: this.state.runningNumber.join(''),\n            runningNumber: [],\n            method: '+'\n        })\n\n        console.log(this.state)\n    }\n\n    equals = () => {\n        switch(this.state.method){\n            case '+': \n                this.setState({\n                    total: this.state.total + this.state.runningNumber.join('')\n                })\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    updateRunningNumber = (number) => {\n        const runningNumber = [...this.state.runningNumber];\n        runningNumber.push(number);\n\n        console.log(typeof this.state.total);\n\n        if(this.state.total !== '0'){\n            this.setState({ \n                total: this.state.total.concat(number),\n                runningNumber: runningNumber\n            });\n        } else {\n            this.setState({\n                total: '0',\n                runningNumber: runningNumber\n            });\n        }\n    }\n\n    render() {\n        const numberArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];\n\n        return(\n            <div className={style.divContainer}>\n                <Total amount={this.state.total}/>\n                {\n                    numberArray.map((element, index) => {\n                        return <NumberKey \n                            number={element} \n                            key={index}\n                            click={() => { this.updateRunningNumber(element)}}\n                        />\n                    })\n                }\n                <Add click={this.add}/>\n                <Equals click={this.equals}/>\n            </div>\n        );\n    }\n}\n\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}